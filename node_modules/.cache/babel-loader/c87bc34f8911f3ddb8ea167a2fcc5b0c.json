{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Benson\\\\Desktop\\\\GoldtoCalendar\\\\GOLDToCalender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Benson\\\\Desktop\\\\GoldtoCalendar\\\\GOLDToCalender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Benson\\\\Desktop\\\\GoldtoCalendar\\\\GOLDToCalender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Benson\\\\Desktop\\\\GoldtoCalendar\\\\GOLDToCalender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Benson\\\\Desktop\\\\GoldtoCalendar\\\\GOLDToCalender\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Benson\\\\Desktop\\\\GoldtoCalendar\\\\GOLDToCalender\\\\src\\\\components\\\\googlesignin.js\";\nimport React, { Component } from 'react';\nimport \"../css/googlesignin.css\";\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBROZZvSTM4XbVEuppNsSmzmAeHxxrX7GE\",\n  authDomain: \"goldtocalendar-1547328134993.firebaseapp.com\"\n});\nvar provider = new firebase.auth.GoogleAuthProvider();\nfirebase.auth().signInWithPopup(provider).then(function (result) {\n  // This gives you a Google Access Token. You can use it to access the Google API.\n  var token = result.credential.accessToken; // The signed-in user info.\n\n  var user = result.user; // ...\n}).catch(function (error) {\n  // Handle Errors here.\n  var errorCode = error.code;\n  var errorMessage = error.message; // The email of the user's account used.\n\n  var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n  var credential = error.credential; // ...\n});\n\nvar Signin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signin, _Component);\n\n  function Signin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: false\n    };\n    _this.uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: function signInSuccess() {\n          return false;\n        }\n      }\n    };\n\n    _this.componentDidMount = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this.setState({\n          isSignedIn: !!user\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Signin, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"GoogleSignIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.isSignedIn ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Signed In\") : React.createElement(StyledFirebaseAuth, {\n        class: \"FireBaseAuth\",\n        uiconfig: this.uiConfig,\n        firebaseAut: firebase.auth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Signin;\n}(Component);\n\nexport { Signin as default };","map":{"version":3,"sources":["C:\\Users\\Benson\\Desktop\\GoldtoCalendar\\GOLDToCalender\\src\\components\\googlesignin.js"],"names":["React","Component","firebase","StyledFirebaseAuth","initializeApp","apiKey","authDomain","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","Signin","state","isSignedIn","uiConfig","signInFlow","signInOptions","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AAEAD,QAAQ,CAACE,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE;AAFS,CAAvB;AAKA,IAAIC,QAAQ,GAAG,IAAIL,QAAQ,CAACM,IAAT,CAAcC,kBAAlB,EAAf;AACAP,QAAQ,CAACM,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,UAASC,MAAT,EAAiB;AAC9D;AACA,MAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CAF8D,CAG9D;;AACA,MAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB,CAJ8D,CAK9D;AACD,CAND,EAMGC,KANH,CAMS,UAASC,KAAT,EAAgB;AACvB;AACA,MAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,MAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHuB,CAIvB;;AACA,MAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALuB,CAMvB;;AACA,MAAIT,UAAU,GAAGI,KAAK,CAACJ,UAAvB,CAPuB,CAQvB;AACD,CAfD;;IAgBqBU,M;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAACC,MAAAA,UAAU,EAAG;AAAd,K;UACRC,Q,GAAW;AACTC,MAAAA,UAAU,EAAE,OADH;AAETC,MAAAA,aAAa,EAAE,CACb3B,QAAQ,CAACM,IAAT,CAAcC,kBAAd,CAAiCqB,WADpB,CAFN;AAKTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,aAAa,EAAE;AAAA,iBAAM,KAAN;AAAA;AADN;AALF,K;;UAUXC,iB,GAAoB,YAAI;AACtB/B,MAAAA,QAAQ,CAACM,IAAT,GAAgB0B,kBAAhB,CAAmC,UAAAlB,IAAI,EAAI;AACzC,cAAKmB,QAAL,CAAc;AAACT,UAAAA,UAAU,EAAC,CAAC,CAACV;AAAd,SAAd;AACD,OAFD;AAGD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,KAAK,EAAG,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKS,KAAL,CAAWC,UAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAEC,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAG,cADV;AAEE,QAAA,QAAQ,EAAE,KAAKC,QAFjB;AAGE,QAAA,WAAW,EAAEzB,QAAQ,CAACM,IAAT,EAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADF;AAYD;;;;EA/BiCP,S;;SAAfuB,M","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../css/googlesignin.css\";\r\nimport firebase from \"firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyBROZZvSTM4XbVEuppNsSmzmAeHxxrX7GE\",\r\n  authDomain: \"goldtocalendar-1547328134993.firebaseapp.com\"\r\n})\r\n\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.auth().signInWithPopup(provider).then(function(result) {\r\n  // This gives you a Google Access Token. You can use it to access the Google API.\r\n  var token = result.credential.accessToken;\r\n  // The signed-in user info.\r\n  var user = result.user;\r\n  // ...\r\n}).catch(function(error) {\r\n  // Handle Errors here.\r\n  var errorCode = error.code;\r\n  var errorMessage = error.message;\r\n  // The email of the user's account used.\r\n  var email = error.email;\r\n  // The firebase.auth.AuthCredential type that was used.\r\n  var credential = error.credential;\r\n  // ...\r\n});\r\nexport default class Signin extends Component {\r\n  state = {isSignedIn : false}\r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n    }\r\n  }\r\n\r\n  componentDidMount = ()=>{\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({isSignedIn:!!user})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class = \"GoogleSignIn\">\r\n        {this.state.isSignedIn ? (\r\n          <div>Signed In</div>) : (\r\n          <StyledFirebaseAuth\r\n            class = \"FireBaseAuth\"\r\n            uiconfig={this.uiConfig}\r\n            firebaseAut={firebase.auth()}/>\r\n        )}\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}